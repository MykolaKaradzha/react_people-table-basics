{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonRow/PersonRow.tsx","pages/People/People.tsx","pages/Home/Home.tsx","pages/NotFound/NotFound.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["Loader","_jsx","className","children","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PersonLink","_ref","person","Link","to","concat","slug","classNames","sex","name","PersonRow","motherInList","fatherInList","currentSlug","useParams","born","died","motherName","fatherName","checkedMotherName","checkedFatherName","_jsxs","People","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","people","setPeople","useEffect","loadPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadedPeople","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","_Fragment","length","map","find","human","Home","NotFound","PageNavLink","path","text","NavLink","_ref2","isActive","NavBar","role","App","Routes","Route","element","Navigate","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.ffff9133.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n","import { Link } from 'react-router-dom';\nimport { FC } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  motherInList: Person | null;\n  fatherInList: Person | null\n};\n\nexport const PersonRow: FC<Props> = (({\n  person,\n  motherInList,\n  fatherInList,\n}) => {\n  const { slug: currentSlug } = useParams();\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const checkedMotherName = motherName || '-';\n  const checkedFatherName = fatherName || '-';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === currentSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {\n          motherInList\n            ? (<PersonLink person={motherInList} />)\n            : (checkedMotherName)\n        }\n      </td>\n      <td>\n        {\n          fatherInList\n            ? (<PersonLink person={fatherInList} />)\n            : (checkedFatherName)\n        }\n      </td>\n    </tr>\n  );\n});\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PersonRow } from '../../components/PersonRow';\n\nexport const People = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        setIsLoading(true);\n        const loadedPeople = await getPeople();\n\n        setPeople(loadedPeople);\n        setError(false);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length\n            ? (\n              !error && !isLoading && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )\n            )\n            : (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map(person => (\n                    <PersonRow\n                      key={person.slug}\n                      motherInList={people.find(\n                        human => human.name === person.motherName,\n                      ) || null}\n                      fatherInList={people.find(\n                        human => human.name === person.fatherName,\n                      ) || null}\n                      person={person}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const Home = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport { FC } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  path: string;\n  text: string;\n  className: string;\n};\n\nexport const PageNavLink: FC<Props> = ({\n  path,\n  text,\n  className,\n}) => (\n  <NavLink\n    to={path}\n    className={({ isActive }) => classNames(className, {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink path=\"/\" text=\"Home\" className=\"navbar-item\" />\n        <PageNavLink path=\"/people\" text=\"People\" className=\"navbar-item\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { People } from './pages/People';\nimport { Home } from './pages/Home';\nimport { NotFound } from './pages/NotFound';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"/people\">\n              <Route index element={<People />} />\n              <Route path=\":slug\" element={<People />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<NotFound />}\n            />\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}